<Application x:Class="ControlSystemViewer.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:ControlSystemViewer"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/Language/en-US.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="TextBlock" x:Key="TextBlock_Default">
                <Setter Property="HorizontalAlignment" Value="Stretch"/>
                <Setter Property="VerticalAlignment" Value="Stretch"/>
                <Setter Property="TextAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Foreground" Value="#1b2338"/>
                <Setter Property="FontFamily" Value="MicrosoftSansSerif"/>
            </Style>
            <Style TargetType="TextBlock" x:Key="Content_14px" BasedOn="{StaticResource TextBlock_Default}">
                <Setter Property="Height" Value="20"/>
                <Setter Property="FontSize" Value="14"/>
                <Setter Property="Foreground" Value="#070022"/>
            </Style>
            <Style TargetType="TextBlock" x:Key="ContentTitle_18px" BasedOn="{StaticResource TextBlock_Default}">
                <Setter Property="Background" Value="#e6e6e6"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Foreground" Value="#070022"/>
                <Setter Property="Padding" Value="0,5,0,0"/>
            </Style>
            <Style TargetType="TextBlock" x:Key="ContentTitle_18px_Dark" BasedOn="{StaticResource TextBlock_Default}">
                <Setter Property="Background" Value="#003366"/>
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Foreground" Value="#e6e6e6"/>
                <Setter Property="Padding" Value="0,5,0,0"/>
            </Style>
            <Style TargetType="TextBlock" x:Key="PopupTitle_20px" BasedOn="{StaticResource TextBlock_Default}">
                <Setter Property="Background" Value="#d9ecfc"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="Padding" Value="0,34,0,0"/>
            </Style>
            <Style TargetType="TextBlock" x:Key="PopupTitle_20px_DarkBackground" BasedOn="{StaticResource TextBlock_Default}">
                <Setter Property="Background" Value="#005BA8"/>
                <Setter Property="FontSize" Value="20"/>
                <Setter Property="Padding" Value="0,34,0,0"/>
                <Setter Property="Foreground" Value="#e6e6e6"/>
            </Style>
            <Style TargetType="{x:Type TextBox}" x:Key="TextBox_Default">
                <Setter Property="Height" Value="35"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Foreground" Value="#070022"/>
                <Setter Property="FontFamily" Value="MicrosoftSansSerif"/>
                <Setter Property="CharacterCasing" Value="Upper"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border" Width="auto" Height="auto" BorderThickness="1" BorderBrush="#adadad">
                                <Grid x:Name="grid" Background="White">
                                    <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type TextBox}" x:Key="Textbox_None_Border" BasedOn="{StaticResource TextBox_Default}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border" Width="auto" Height="30" BorderThickness="0">
                                <Grid x:Name="grid" Background="White">
                                    <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="LabelStyle_RoundCorner" TargetType="{x:Type Label}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Label}">
                            <Border x:Name="ButtonBorder" CornerRadius="5" BorderThickness="0,0,0,3">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="Transparent"/>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush>
                                        <GradientStop Color="Transparent" Offset="0" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="Normal"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="MaterialDesignToolTip" TargetType="{x:Type ToolTip}" >
                <Setter Property = "HorizontalOffset" Value="-10"/>
                <Setter Property = "VerticalOffset" Value="-10"/>
                <Setter Property = "Background" Value="Black"/>
                <Setter Property = "FontSize" Value="30"/>
                <Setter Property = "FontWeight" Value="Bold"/>
            </Style>
            <Style x:Key="MenuItemBaseStyle" TargetType="{x:Type MenuItem}">
                <Setter Property = "Foreground" Value="GhostWhite"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type MenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <DockPanel x:Name="topLvl">
                                    <ContentPresenter x:Name="Icon" ContentSource="Icon" Margin="4,0,6,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                    <Path x:Name="GlyphPanel" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Margin="7,0,0,0" Visibility="Collapsed" VerticalAlignment="Center"/>
                                    <ContentPresenter x:Name="content" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                                <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="1" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" VerticalOffset="-1">

                                    <Border BorderThickness="2" BorderBrush="#005BA8" Background="#005BA8">
                                        <ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="true" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#007BC8" TargetName="topLvl"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="True">
                                    <Setter Property="Foreground" Value="GhostWhite"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="Gray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ButtonStyle_Default" TargetType="{x:Type Button}">
                <Setter Property="Width" Value="150"/>
                <Setter Property="Height" Value="33"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Background" Value="#005ba8"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="ButtonBorder" CornerRadius="5" BorderThickness="0,0,0,3">
                                <Border.BorderBrush>
                                    <SolidColorBrush Color="#003366"/>
                                </Border.BorderBrush>
                                <Border.Background>
                                    <LinearGradientBrush>
                                        <GradientStop Color="#005ba8" Offset="0" />
                                    </LinearGradientBrush>
                                </Border.Background>
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="Normal"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="ButtonBorder" Value="#008aff"/>
                                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="#003366"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="Transparent"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="ButtonBorder" Property="Background" Value="#b2b2b2" />
                                    <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ButtonStyle_Circle" TargetType="{x:Type Button}">
                <Setter Property="Width" Value="50"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="MyButton"  CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <!--<Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="MyButton" Property="Opacity" Value="0.7" />
                                    <Setter Property="Foreground" Value="Gray" />
                                    <Setter Property="Background" Value="LightGray" />
                                </Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Cursor" Value="Hand" />
            </Style>
            <Style x:Key="ButtonStyle_Square" TargetType="{x:Type Button}">
                <Setter Property="Width" Value="50"/>
                <Setter Property="Height" Value="50"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="MyButton" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <!--<Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="MyButton" Property="Opacity" Value="0.7" />
                                    <Setter Property="Foreground" Value="Gray" />
                                    <Setter Property="Background" Value="LightGray" />
                                </Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Cursor" Value="Hand" />
            </Style>
            <Style x:Key="ButtonStyle_SizeControl" TargetType="{x:Type Button}">
                <Setter Property="Width" Value="34"/>
                <Setter Property="Height" Value="36"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{x:Null}"/>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="MyButton"  CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="RenderTransformOrigin" Value="0.5, 0.5"/>
                                    <Setter Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <!--<Trigger Property="IsDefaulted" Value="True"/>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="MyButton" Property="Opacity" Value="0.7" />
                                    <Setter Property="Foreground" Value="Gray" />
                                    <Setter Property="Background" Value="LightGray" />
                                </Trigger>-->
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Cursor" Value="Hand" />
            </Style>
            <Style x:Key="PasswordBoxStyle_Default" TargetType="{x:Type PasswordBox}">
                <Setter Property="Height" Value="35"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Foreground" Value="#070022"/>
                <Setter Property="FontFamily" Value="MicrosoftSansSerif"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type PasswordBox}">
                            <Border x:Name="border" Width="auto" Height="auto" BorderThickness="1" BorderBrush="#adadad">
                                <Grid x:Name="grid" Background="White">
                                    <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="LabelStyle_StatusBox" TargetType="{x:Type Label}">
                <Setter Property="Width" Value="50"/>
                <Setter Property="Height" Value="26"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Background" Value="#043262"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="14"/>
            </Style>
            <!--無白邊GroupBoxBorder 參考:https://blog.csdn.net/pigautumn/article/details/53665032-->
            <BorderGapMaskConverter x:Key="BorderGapMaskConverter"/>
            <Style x:Key="GroupboxWithoutWhiteBorder" TargetType="{x:Type GroupBox}">
                <Setter Property="BorderBrush" Value="#D5DFE5" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GroupBox}">
                            <Grid SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="6" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="6" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="6" />
                                </Grid.RowDefinitions>
                                <Border CornerRadius="4" Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent" Background="{TemplateBinding Background}" />
                                <Border Name="Header" Padding="3,1,3,0" Grid.Row="0" Grid.RowSpan="2" Grid.Column="1">
                                    <ContentPresenter ContentSource="Header" RecognizesAccessKey="true" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </Border>
                                <ContentPresenter Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <Border Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4"  BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="3">
                                    <Border.OpacityMask>
                                        <MultiBinding Converter="{StaticResource BorderGapMaskConverter}" ConverterParameter="7">
                                            <Binding ElementName="Header" Path="ActualWidth" />
                                            <Binding Path="ActualWidth" RelativeSource="{RelativeSource Self}" />
                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource Self}" />
                                        </MultiBinding>
                                    </Border.OpacityMask>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="Button" x:Key="btn_style_1">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="#005ba8"/>
                <Setter Property="Width" Value="150"/>
                <Setter Property="Height" Value="33"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border BorderThickness="0,0,0,3" BorderBrush="#003366" CornerRadius="5" Background="{TemplateBinding Background}">
                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#008aff" />
                                    <!--<Setter Property="BorderBrush" Value="#003366" />-->
                                    <!--<Setter Property="BorderThickness" Value="0,0,0,3" />-->

                                    <!--<Setter Property="Foreground" Value="White" />-->
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#008aff" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="BorderBrush" Value="Transparent" />

                                    <!--<Setter Property="Foreground" Value="#1b2338"/>-->
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" Value="#b2b2b2"/>
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Cursor" Value="Hand"/>
            </Style>
            <Style TargetType="Button" x:Key="btn_style_2">
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="#005ba8"/>
                <Setter Property="Width" Value="150"/>
                <Setter Property="Height" Value="33"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="5" Background="{TemplateBinding Background}">
                                <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#008aff" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="#008aff" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Background" Value="#b2b2b2"/>
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="BorderBrush" Value="Transparent" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="Cursor" Value="Hand"/>
            </Style>
            <Style x:Key="TabItemStyle_Data" TargetType="{x:Type TabItem}">
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="FontSize" Value="16"/>
                <Setter Property="Width" Value="150"/>
                <Setter Property="Height" Value="30"/>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
