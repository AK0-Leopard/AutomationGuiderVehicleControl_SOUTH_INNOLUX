<UserControl x:Class="ControlSystemViewer.Views.Menu_Maintenance.ParkZoneManagement"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ControlSystemViewer.Views.Menu_Maintenance"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="720" d:DesignWidth="1600"
             FontFamily="MicrosoftSansSerif" FontSize="18" Foreground="#1b2338" Background="#f6f6f6">
    <UserControl.Resources>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="40" />
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" Background="White" BorderThickness="1,1,0,1" BorderBrush="#b2b2b2" />

                <Border Grid.Column="1" Background="White" BorderThickness="0,1,1,1" BorderBrush="#b2b2b2" Cursor="Hand"/>
                <Path x:Name="Arrow" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Margin="12" Stretch="Fill" Fill="#005ba8" />
            </Grid>
        </ControlTemplate>
        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="Height" Value="30"/>
            <!--<Setter Property="Width" Value="250"/>-->
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="#1b2338"/>
            <Setter Property="FontFamily" Value="MicrosoftSansSerif"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <!-- ToggleButton 已数据绑定到 ComboBox 本身以切换 IsDropDownOpen -->
                            <ToggleButton Grid.Column="2" Template="{DynamicResource ComboBoxToggleButton}" x:Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <ContentPresenter HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="ContentSite" VerticalAlignment="Center" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False"/>

                            <!-- 必须将 TextBox 命名为 PART_EditableTextBox，否则 ComboBox 将无法识别它 -->
                            <TextBox Visibility="Hidden" Template="{DynamicResource ComboBoxTextBox}" HorizontalAlignment="Left" Margin="3,3,23,3" x:Name="PART_EditableTextBox" Style="{x:Null}" VerticalAlignment="Center" Focusable="True" Background="Transparent" IsReadOnly="{TemplateBinding IsReadOnly}"/>

                            <!-- Popup 可显示 ComboBox 中的项列表。IsOpen 已数据绑定到通过 ComboBoxToggleButton 来切换的 IsDropDownOpen -->
                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" PopupAnimation="Slide">
                                <Grid MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{TemplateBinding ActualWidth}" x:Name="DropDown" SnapsToDevicePixels="True">
                                    <Border x:Name="DropDownBorder" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1"/>
                                    <ScrollViewer Margin="4,6,4,6" Style="{DynamicResource SimpleScrollViewer}" SnapsToDevicePixels="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True">
                                        <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="White"/>
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="Width" Value="150"/>
            <Setter Property="Height" Value="33"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="#005ba8"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="ButtonBorder" CornerRadius="5" BorderThickness="0,0,0,3">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="#003366"/>
                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush>
                                    <GradientStop Color="#005ba8" Offset="0" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" TextElement.FontWeight="Normal"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="ButtonBorder" Value="#008aff"/>
                                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="#003366"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="BorderBrush" TargetName="ButtonBorder" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="#b2b2b2" />
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBlock" x:Key="Title_18px">
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="#070022"/>
            <Setter Property="Padding" Value="0,13,10,12"/>
            <Setter Property="Height" Value="46"/>
            <Setter Property="Width" Value="165"/>
            <Setter Property="TextAlignment" Value="Right"/>
        </Style>
        <Style TargetType="{x:Type TextBox}" x:Key="TextBox_Default">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="250"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="#070022"/>
            <Setter Property="FontFamily" Value="MicrosoftSansSerif"/>
            <Setter Property="CharacterCasing" Value="Upper"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" Width="auto" Height="auto" BorderThickness="1" BorderBrush="#adadad">
                            <Grid x:Name="grid" Background="White">
                                <ScrollViewer x:Name="PART_ContentHost" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="{x:Type Hyperlink}" TargetType="{x:Type Hyperlink}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Foreground" Value="#005ba8"/>
            <Setter Property="TextDecorations" Value="Underline"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="Red"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Cursor" Value="Hand"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type DatePicker}">
            <Setter Property="Width" Value="250"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="FontSize" Value="18"/>
            <Setter Property="Foreground" Value="#070022"/>
            <Setter Property="FontFamily" Value="MicrosoftSansSerif"/>
        </Style>
        <Style x:Key="ColumnElementStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Padding" Value="10,4,10,7" />
        </Style>
        <Style x:Key="ColumnHeaderStyle1" TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="Height" Value="30"/>
            <Setter Property="Padding" Value="10,4,10,7" />
            <Setter Property="Background" Value="#bed0df"/>
            <Setter Property="Foreground" Value="#1b2338"/>
            <Setter Property="FontSize" Value="10.5pt"/>
            <Setter Property="BorderBrush" Value="#e6e6e6"/>
            <Setter Property="BorderThickness"  Value="0,1,1,1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid x:Name="HedearGrid" Background="#bed0df" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="BackgroundBorder" BorderThickness="0,1,1,1" BorderBrush="#e6e6e6" Grid.ColumnSpan="2" />
                            <ContentPresenter  Margin="6,3,6,3" VerticalAlignment="Center" Grid.Column="0" />
                            <Path x:Name="SortArrow" Visibility="Collapsed" Data="M0,0 L1,0 0.5,1 z" Stretch="Fill" 
                                Grid.Column="1" Width="8" Height="6" Fill="#1b2338" Margin="0,0,8,0" 
                                VerticalAlignment="Center" RenderTransformOrigin="0.5,0.4" />
                            <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Cursor="SizeWE" Grid.Column="1" >
                                <Thumb.Style>
                                    <Style TargetType="{x:Type Thumb}">
                                        <Setter Property="Width" Value="2" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Border Background="Transparent"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Thumb.Style>
                            </Thumb>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="SortDirection" Value="Ascending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                                <Setter TargetName="SortArrow" Property="RenderTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="180" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="SortDirection" Value="Descending">
                                <Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
            <Setter Property="ColumnHeaderStyle" Value="{DynamicResource ColumnHeaderStyle1}"/>
            <!--网格线颜色-->
            <Setter Property="BorderBrush" Value="#e6e6e6" />
            <Setter Property="HorizontalGridLinesBrush" Value="#e6e6e6"/>
            <Setter Property="VerticalGridLinesBrush" Value="#e6e6e6"/>
        </Style>
    </UserControl.Resources>
    <Grid x:Name="MainGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="300"/>
            <ColumnDefinition Width="200"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="203"/>
            <RowDefinition Height="10"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        
        <DataGrid x:Name="dgv_parkzone" IsReadOnly="True" SelectionMode="Single" CanUserAddRows="False" Style="{DynamicResource DataGridStyle1}" 
                  AlternationCount="2" CanUserSortColumns="True" Grid.Row="0" FontSize="14" Grid.ColumnSpan="2" MouseLeftButtonDown="Grid_MouseLeftButtonDown">
            <DataGrid.CellStyle>
                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Grid Background="{TemplateBinding Background}">
                                    <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#005BA8"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.RowStyle>
                <Style TargetType="{x:Type DataGridRow}">
                    <Style.Triggers>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                            <Setter Property="Background" Value="White" />
                            <Setter Property="Foreground" Value="#1b2338" />
                        </Trigger>
                        <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                            <Setter Property="Background" Value="#f2f9ff" />
                            <Setter Property="Foreground" Value="#1b2338" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#005BA8"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
        </DataGrid>

        <local:Map_BasePZ Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="1" x:Name="Map_Base"/>

        <Grid x:Name="ParkZoneSetGrid" Grid.Column="1" Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="6" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="10" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="20"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="10"/>
                <RowDefinition Height="*" />
                <RowDefinition Height="10"/>
            </Grid.RowDefinitions>

            <TextBlock Grid.Row="1" Grid.Column="1" x:Name="title_ParkZone" Text="{DynamicResource PARK_ZONE}"/>
            <TextBox Grid.Row="1" Grid.Column="3" x:Name="txt_ParkZoneID"/>

            <TextBlock Grid.Row="3" Grid.Column="1" x:Name="title_VhType" Text="{DynamicResource VEHICLE_TYPE}"/>
            <ComboBox Grid.Row="3" Grid.Column="3" x:Name="combo_VhType"/>

            <TextBlock Grid.Row="5" Grid.Column="1" x:Name="title_WaterLvl" Text="{DynamicResource WATER_LEVEL}"/>
            <TextBox Grid.Row="5" Grid.Column="3" x:Name="txt_WaterLvl"/>

            <TextBlock Grid.Row="7" Grid.Column="1" x:Name="title_PullDist" Text="{DynamicResource PULL_DIST}"/>
            <TextBox Grid.Row="7" Grid.Column="3" x:Name="txt_PullDist"/>

            <TextBlock Grid.Row="9" Grid.Column="1" x:Name="title_IsAct" Text="{DynamicResource ACTIVE}"/>
            <ComboBox Grid.Row="9" Grid.Column="3" x:Name="combo_IsAct"/>

            <TextBlock Grid.Row="11" Grid.Column="1" x:Name="title_Address" Text="{DynamicResource ADDRESS}"/>
            <DataGrid Name="dgv_address" Grid.Row="13" Grid.Column="1" Grid.ColumnSpan="3"
                      IsReadOnly="True" SelectionMode="Single" CanUserAddRows="False" Style="{DynamicResource DataGridStyle1}" />
        </Grid>

        <Button x:Name="btn_Add" Content="{DynamicResource ADD}" Click="btn_Add_Click" Grid.ColumnSpan="1" Grid.Column="3" Margin="26,8,10,87"/>
        <Button x:Name="btn_Modify" Content="{DynamicResource MODIFY}" Click="btn_Modify_Click" Grid.ColumnSpan="1" Grid.Column="3" Margin="26,54,10,41"/>
        <Button x:Name="btn_Delete" Content="{DynamicResource DELETE}" Click="btn_Delete_Click" Grid.ColumnSpan="1" Grid.Column="3" Margin="26,100,10,0"/>
        <Button Grid.Column="3" Grid.Row="3" VerticalAlignment="Bottom"  Click="btn_Close_Click" Name="btn_Close" Content="{DynamicResource CLOSE}" Grid.ColumnSpan="1" Margin="26,0,10,0"/>
    </Grid>

</UserControl>